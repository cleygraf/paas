image: docker:latest

variables:
  APP_NAME: "paas-demo"
  URL_PROJ: "https:///gitlab.com/$CI_PROJECT_PATH"
  PAAS_TITLE: "GitLab PaaS Demo"
  WHY_TITLE: "Why GitLab?"
  AI_TITLE: "GitLab Duo AI Introduction and Demo"
  OPERATORS_TITLE: "GitLab k8s Operators"
  COMPLIANCE_TITLE: "Achieving Continuous Compliance with GitLab"
  SUBTITLE: "Blue Reply, 2023-11-10"

stages:
  - prechecks
  - build
  - test
  - review
  - deploy

include:
  # Use IaC scan if not local and if $INFRA is not gitlab
  - template: Jobs/SAST-IaC.gitlab-ci.yml
    rules:
      - if: $GITLAB_CI != 'false' && $INFRA != "gitlab"
   # Conditional includes
  - local: "/infra/google/pipeline/google.gitlab-ci.yml"
    rules:
      - if: $INFRA == "google"
  - local: "/infra/aws/pipeline/aws.gitlab-ci.yml"
    rules:
      - if: $INFRA == "aws"
  - local: "/infra/gitlab/pipeline/gitlab.gitlab-ci.yml"
    rules:
      - if: $INFRA == "gitlab"
  - local: "/infra/gitlab/pipeline/gitlab.gitlab-ci.yml"
    rules:
      - if: $INFRA == null

markdownlint:
  stage: prechecks
  image: registry.gitlab.com/pipeline-components/markdownlint:latest
  script:
    - mdl --style all -i -r ~MD004,~MD009,~MD013,~MD025,~MD032,~MD041,~MD033,~MD002,~MD026,~MD035,~MD024,~MD034,~MD007,~MD031,~MD029,~MD036 --warnings .

generate-deck:
  stage: build
  image:
    name: marpteam/marp-cli
    entrypoint: ['']
  script:
    - if [ ! -d ./build ]; then mkdir -p ./build; fi
    - sed -i "s|##PAAS_TITLE##|${PAAS_TITLE}|g" src/*.md
    - sed -i "s|##WHY_TITLE##|${WHY_TITLE}|g" src/*.md
    - sed -i "s|##AI_TITLE##|${AI_TITLE}|g" src/*.md
    - sed -i "s|##OPERATORS_TITLE##|${OPERATORS_TITLE}|g" src/*.md
    - sed -i "s|##COMPLIANCE_TITLE##|${COMPLIANCE_TITLE}|g" src/*.md
    - sed -i "s|##SUBTITLE##|${SUBTITLE}|g" src/*.md
    - sed -i "s,##URL_PROD##,$URL_PROD,g" src/*.md
    - sed -i "s,##CI_PROJECT_PATH##,$URL_PROJ,g" src/*.md
    - sed -i "s,##URL_PROJ##,$URL_PROJ,g" src/*.md
    - sed -i "s,##URL_AI_PROD##,$URL_AI_PROD,g" src/*.md
    - sed -i "s,##URL_WHY_PROD##,$URL_WHY_PROD,g" src/*.md
    - sed -i "s,##URL_OPERATOR_PROD##,$URL_OPERATOR_PROD,g" src/*.md
    - sed -i "s,##URL_REVIEW##,$URL_REVIEW,g" src/*.md
    - export MARP_USER="$(id -u):$(id -g)"
    - cp -r ./build/assets/* ./src/assets/
    - /home/marp/.cli/docker-entrypoint -I src --html -o build
    - /home/marp/.cli/docker-entrypoint -I src --html --pdf --allow-local-files -o build || echo "PDF creation failed!"
    - cp ./src/assets/favicon.ico ./build/
    - cp -r ./src/assets ./build/
  artifacts:
    paths:
      - 'build/'
  needs:
    - job: create-qr

create-qr:
  stage: build
  image:
    name: leplusorg/qrcode
    entrypoint: ['']
  script:
    - if [ ! -d ./build/assets ]; then mkdir -p ./build/assets; fi
    - qrencode -s 6 -l H -o "./build/assets/url-proj.png" "$URL_PROJ"
    - qrencode -s 6 -l H -o "./build/assets/url-prod.png" "$URL_PROD"
    - qrencode -t ANSI -o "./build/assets/url-prod.txt" "$URL_PROD"
    - qrencode -s 6 -l H -o "./build/assets/url-ai-prod.png" "$URL_AI_PROD"
    - qrencode -s 6 -l H -o "./build/assets/url-why-prod.png" "$URL_WHY_PROD"
    - qrencode -s 6 -l H -o "./build/assets/url-operator-prod.png" "$URL_OPERATOR_PROD"
    - qrencode -t ANSI -o "./build/assets/url-ai-prod.txt" "$URL_AI_PROD"
    - qrencode -s 6 -l H -o "./build/assets/url-review.png" "$URL_REVIEW"
    - qrencode -t ANSI -o "./build/assets/url-review.txt" "$URL_REVIEW"
    - qrencode -s 6 -l H -o "./build/assets/project-path.png" "$CI_PROJECT_PATH"
    - qrencode -t ANSI -o "./build/assets/project-path.txt" "$CI_PROJECT_PATH"
  artifacts:
    paths:
      - 'build/'



