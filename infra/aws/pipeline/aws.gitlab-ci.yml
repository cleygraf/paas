variables:
  URL_PROD: "http://$APP_NAME-$BASE_DOMAIN_PROD"
  URL_REVIEW: "http://gitlab-review-lb-1662808248.eu-central-1.elb.amazonaws.com"  
  AWS_EXECUTION_ROLE_ARN_REVIEW: "arn:aws:iam::687015913858:role/ecsTaskExecutionRole"
  AWS_ECS_CLUSTER_REVIEW: "gitlab-review"
  AWS_ECS_SERVCIE_REVIEW: "gitlab-review-svc"
  AWS_ECS_TASK_DEFINITION_REVIEW: "paas-review"
  AWS_ECS_TASK_FAMILY_REVIEW: "paas-review"

build-container:
  stage: build
  image: amazon/aws-cli
  before_script:
    - amazon-linux-extras install docker > /dev/null 2>&1
    - yum -y install amazon-ecr-credential-helper > /dev/null 2>&1
  services:
    - docker:dind
  tags:
    - aws
  script:
    # Make docker work with IRSA
    # - dockerConfig="~/.docker"
    # - mkdir -p "$dockerConfig"
    # - echo '{"credsStore":"ecr-login"}' > "$dockerConfig/config.json"
    - docker build -t "$AWS_REPO_URI:latest" .
    # Uncomment next line for use with IRSA
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION| docker login --username AWS --password-stdin $AWS_REPO_URI
    - docker push "$AWS_REPO_URI:latest"
  needs:
    - job: generate-deck
    - job: create-qr

review:
  stage: review
  image: amazon/aws-cli
  tags:
    - aws
  script:
    - definitions=$(cat ./infra/aws/config/review/task_definition.json)
    - aws ecs register-task-definition  --region "$AWS_DEFAULT_REGION" --family "$AWS_ECS_TASK_FAMILY_REVIEW" --container-definitions "$definitions" --cpu "256" --memory "1024" --network-mode  "awsvpc" --requires-compatibilities "FARGATE" --execution-role-arn "$AWS_EXECUTION_ROLE_ARN_REVIEW" 
    - aws ecs update-service --region "$AWS_DEFAULT_REGION" --cluster "$AWS_ECS_CLUSTER_REVIEW" --service "$AWS_ECS_SERVCIE_REVIEW"  --task-definition "$AWS_ECS_TASK_DEFINITION_REVIEW"
  environment:
    name: review
    url: $URL_REVIEW
  only:
    - branches
  except:
    - master

deploy-prod:
  stage: deploy
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - tar -zcf /tmp/source.tgz . && gcloud builds submit --config=./infra/google/pipeline/cloudbuild-deploy-prod.yaml --substitutions=BRANCH_NAME="$CI_COMMIT_REF_NAME",TRIGGER_NAME="build-container",SHORT_SHA="$CI_COMMIT_SHORT_SHA",REF_NAME="$APP_NAME" /tmp/source.tgz
    - echo "$URL_PROD"
    - cat ./assets/url-prod.txt
  environment:
    name: production
    url: $URL_PROD
  when: manual
  needs:
    - job: generate-deck
    - job: create-qr
