variables:
  URL_PROD: "$CI_PAGES_URL"
  URL_REVIEW: "$CI_PAGES_URL/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/"

review:
  stage: review
  script:
    - export
    - ls -al
    - mkdir -p "public"
    - cp -vr "build" "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA"
    - cp -vr "assets" "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/"
    - echo "$URL_REVIEW"
    - cat ./assets/url-review.txt
  environment:
    name: review/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA
    url: $URL_REVIEW
    on_stop: stop_review
    auto_stop_in: 1 hours
  artifacts:
    paths:
      - public
  dependencies:
    - generate-deck
    - create-qr
  only:
    - branches
  except:
    - master

stop_review:
  stage: review
  script:
    - rm "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA"
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA
    action: stop

deploy-prod:
  stage: deploy
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - tar -zcf /tmp/source.tgz . && gcloud builds submit --config=./infra/google/pipeline/cloudbuild-deploy-prod.yaml --substitutions=BRANCH_NAME="$CI_COMMIT_REF_NAME",TRIGGER_NAME="build-container",SHORT_SHA="$CI_COMMIT_SHORT_SHA",REF_NAME="$APP_NAME" /tmp/source.tgz
    - echo "$URL_PROD"
    - cat ./assets/url-prod.txt
  environment:
    name: production
    url: $URL_PROD
  when: manual
  needs:
    - job: generate-deck
    - job: create-qr
