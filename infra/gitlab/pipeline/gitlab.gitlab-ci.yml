variables:
  URL_PROD: "$CI_PAGES_URL/build/slides.html"
  URL_REVIEW: "$CI_PAGES_URL/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/build/slides.html"

pages:
  stage: review
  script:
    # Get existing content and extract to public
    - wget https://gitlab-partner-demos.gitlab.io/paas/paas/content.tgz || true
    - "[ -f content.tgz ] && tar -xzf content.tgz"
    # Create an folder for this commit and copy over content
    - mkdir -p "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/build"
    - cp -vr "build" "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/"
    - cp -vr "assets" "public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA/"
    # create an archive of content
    - tar -czf public/content.tgz public
    - echo "$URL_REVIEW"
    - cat ./assets/url-review.txt
  environment:
    name: review/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA
    url: $URL_REVIEW
    on_stop: stop_review
    auto_stop_in: 1 hours
  artifacts:
    paths:
      - public
  dependencies:
    - generate-deck
    - create-qr
  only:
    - branches
  except:
    - master

stop_review:
  stage: review
  script:
    # Get existing content and extract to public
    - wget https://gitlab-partner-demos.gitlab.io/paas/paas/content.tgz || true
    - "[ -f content.tgz ] && tar -xzf content.tgz"
    # Create an folder for this commit and copy over content
    - "[ -d \"public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA\" ] && rm -vr \"public/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA\""
    # create an archive of content
    - tar -czf public/content.tgz public
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME--$CI_COMMIT_SHORT_SHA
    action: stop
  artifacts:
    paths:
      - public
  dependencies:
    - pages

page:
  stage: deploy
  script:
    # Get existing content and extract to public
    - wget https://gitlab-partner-demos.gitlab.io/paas/paas/content.tgz || true
    - "[ -f content.tgz ] && tar -xzf content.tgz"
    # Create an folder for this commit and copy over content
    - mkdir -p "public/build"
    - cp -vr "build" "public/"
    - cp -vr "assets" "public/"
    # create an archive of content
    - tar -czf public/content.tgz public
    - tar -tzf public/content.tgz
    - echo "$URL_PROD"
    - cat ./assets/url-prod.txt
  environment:
    name: production
    url: $URL_PROD
  when: manual
  artifacts:
    paths:
      - public
  needs:
    - job: generate-deck
    - job: create-qr
